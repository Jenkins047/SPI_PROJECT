/* Generated by Yosys 0.12+54 (git sha1 59a715034, gcc 9.3.0-17ubuntu1~20.04 -fPIC -Os) */

module spi_exe_unit_1_rtl(i_rst, i_sclk, i_mosi, o_miso, i_cs);
  wire _0000_;
  wire _0001_;
  wire [7:0] _0002_;
  wire _0003_;
  wire _0004_;
  wire _0005_;
  wire _0006_;
  wire _0007_;
  wire _0008_;
  wire _0009_;
  wire _0010_;
  wire _0011_;
  wire _0012_;
  wire _0013_;
  wire _0014_;
  wire _0015_;
  wire _0016_;
  wire _0017_;
  wire _0018_;
  wire _0019_;
  wire _0020_;
  wire _0021_;
  wire _0022_;
  wire _0023_;
  wire _0024_;
  wire _0025_;
  wire _0026_;
  wire _0027_;
  wire _0028_;
  wire _0029_;
  wire _0030_;
  wire _0031_;
  wire _0032_;
  wire _0033_;
  wire _0034_;
  wire _0035_;
  wire _0036_;
  wire _0037_;
  wire _0038_;
  wire _0039_;
  wire _0040_;
  wire _0041_;
  wire _0042_;
  wire _0043_;
  wire _0044_;
  wire _0045_;
  wire _0046_;
  wire _0047_;
  wire _0048_;
  wire _0049_;
  wire _0050_;
  wire _0051_;
  wire _0052_;
  wire _0053_;
  wire _0054_;
  wire _0055_;
  wire _0056_;
  wire _0057_;
  wire _0058_;
  wire _0059_;
  wire _0060_;
  wire _0061_;
  wire _0062_;
  wire _0063_;
  wire _0064_;
  wire _0065_;
  wire _0066_;
  wire _0067_;
  wire _0068_;
  wire _0069_;
  wire _0070_;
  wire _0071_;
  wire _0072_;
  wire _0073_;
  wire _0074_;
  wire _0075_;
  wire _0076_;
  wire _0077_;
  wire _0078_;
  wire _0079_;
  wire _0080_;
  wire _0081_;
  wire _0082_;
  wire _0083_;
  wire _0084_;
  wire _0085_;
  wire _0086_;
  wire _0087_;
  wire _0088_;
  wire _0089_;
  wire _0090_;
  wire _0091_;
  wire _0092_;
  wire _0093_;
  wire _0094_;
  wire _0095_;
  wire _0096_;
  wire _0097_;
  wire _0098_;
  wire _0099_;
  wire _0100_;
  wire _0101_;
  wire _0102_;
  wire _0103_;
  wire _0104_;
  wire _0105_;
  wire _0106_;
  wire _0107_;
  wire _0108_;
  wire _0109_;
  wire _0110_;
  wire _0111_;
  wire _0112_;
  wire _0113_;
  wire _0114_;
  wire _0115_;
  wire _0116_;
  wire _0117_;
  wire _0118_;
  wire _0119_;
  wire _0120_;
  wire _0121_;
  wire _0122_;
  wire _0123_;
  wire _0124_;
  wire _0125_;
  wire _0126_;
  wire _0127_;
  wire _0128_;
  wire _0129_;
  wire _0130_;
  wire _0131_;
  wire _0132_;
  wire _0133_;
  wire _0134_;
  wire _0135_;
  wire _0136_;
  wire _0137_;
  wire _0138_;
  wire _0139_;
  wire _0140_;
  wire _0141_;
  wire _0142_;
  wire _0143_;
  wire _0144_;
  wire _0145_;
  wire _0146_;
  wire _0147_;
  wire _0148_;
  wire _0149_;
  wire _0150_;
  wire _0151_;
  wire _0152_;
  wire _0153_;
  wire _0154_;
  wire _0155_;
  wire _0156_;
  wire _0157_;
  wire _0158_;
  wire _0159_;
  wire _0160_;
  wire _0161_;
  wire _0162_;
  wire _0163_;
  wire _0164_;
  wire _0165_;
  wire _0166_;
  wire _0167_;
  wire _0168_;
  wire _0169_;
  wire _0170_;
  wire _0171_;
  wire _0172_;
  wire _0173_;
  wire _0174_;
  wire _0175_;
  wire _0176_;
  wire _0177_;
  wire _0178_;
  wire _0179_;
  wire _0180_;
  wire _0181_;
  wire _0182_;
  wire _0183_;
  wire _0184_;
  wire _0185_;
  wire _0186_;
  wire _0187_;
  wire _0188_;
  wire _0189_;
  wire _0190_;
  wire _0191_;
  wire _0192_;
  wire _0193_;
  wire _0194_;
  wire _0195_;
  wire _0196_;
  wire _0197_;
  wire _0198_;
  wire _0199_;
  wire _0200_;
  wire _0201_;
  wire _0202_;
  wire _0203_;
  wire _0204_;
  wire _0205_;
  wire _0206_;
  wire _0207_;
  wire _0208_;
  wire _0209_;
  wire _0210_;
  wire _0211_;
  wire _0212_;
  wire _0213_;
  wire _0214_;
  wire _0215_;
  wire _0216_;
  wire _0217_;
  wire _0218_;
  wire _0219_;
  wire _0220_;
  wire _0221_;
  wire _0222_;
  wire _0223_;
  wire _0224_;
  wire _0225_;
  wire _0226_;
  wire _0227_;
  wire _0228_;
  wire _0229_;
  wire _0230_;
  wire _0231_;
  wire _0232_;
  wire _0233_;
  wire _0234_;
  wire _0235_;
  wire _0236_;
  wire _0237_;
  wire _0238_;
  wire _0239_;
  wire _0240_;
  wire _0241_;
  wire _0242_;
  wire _0243_;
  wire _0244_;
  wire _0245_;
  wire _0246_;
  wire _0247_;
  wire _0248_;
  wire _0249_;
  wire _0250_;
  wire _0251_;
  wire _0252_;
  wire _0253_;
  wire _0254_;
  wire _0255_;
  wire _0256_;
  wire _0257_;
  wire _0258_;
  wire _0259_;
  wire _0260_;
  wire _0261_;
  wire _0262_;
  wire _0263_;
  wire _0264_;
  wire _0265_;
  wire _0266_;
  wire _0267_;
  wire _0268_;
  wire _0269_;
  wire _0270_;
  wire _0271_;
  wire _0272_;
  wire _0273_;
  wire _0274_;
  wire _0275_;
  wire _0276_;
  wire _0277_;
  wire _0278_;
  wire _0279_;
  wire _0280_;
  wire _0281_;
  wire _0282_;
  wire _0283_;
  wire _0284_;
  wire _0285_;
  wire _0286_;
  wire _0287_;
  wire _0288_;
  wire _0289_;
  wire _0290_;
  wire _0291_;
  wire _0292_;
  wire _0293_;
  wire _0294_;
  wire _0295_;
  wire _0296_;
  wire _0297_;
  wire _0298_;
  wire _0299_;
  wire _0300_;
  wire _0301_;
  wire _0302_;
  wire _0303_;
  wire _0304_;
  wire _0305_;
  wire _0306_;
  wire _0307_;
  wire _0308_;
  wire _0309_;
  wire _0310_;
  wire _0311_;
  wire _0312_;
  wire _0313_;
  wire _0314_;
  wire _0315_;
  wire _0316_;
  wire _0317_;
  wire _0318_;
  wire _0319_;
  wire _0320_;
  wire _0321_;
  wire _0322_;
  wire _0323_;
  wire _0324_;
  wire _0325_;
  wire _0326_;
  wire _0327_;
  wire _0328_;
  wire _0329_;
  wire _0330_;
  wire _0331_;
  wire _0332_;
  wire _0333_;
  wire _0334_;
  wire _0335_;
  wire _0336_;
  wire _0337_;
  wire _0338_;
  wire _0339_;
  wire _0340_;
  wire _0341_;
  wire _0342_;
  wire _0343_;
  wire _0344_;
  wire _0345_;
  wire _0346_;
  wire _0347_;
  wire _0348_;
  wire _0349_;
  wire _0350_;
  wire _0351_;
  wire _0352_;
  wire _0353_;
  wire _0354_;
  wire _0355_;
  wire _0356_;
  wire _0357_;
  wire _0358_;
  wire _0359_;
  wire _0360_;
  wire _0361_;
  wire _0362_;
  wire _0363_;
  wire _0364_;
  wire _0365_;
  wire _0366_;
  wire _0367_;
  wire _0368_;
  wire _0369_;
  wire _0370_;
  wire _0371_;
  wire _0372_;
  wire _0373_;
  wire _0374_;
  wire _0375_;
  wire _0376_;
  wire _0377_;
  wire _0378_;
  wire _0379_;
  wire _0380_;
  wire _0381_;
  wire _0382_;
  wire _0383_;
  wire _0384_;
  wire _0385_;
  wire _0386_;
  wire _0387_;
  wire _0388_;
  wire _0389_;
  wire _0390_;
  wire _0391_;
  wire _0392_;
  wire _0393_;
  wire _0394_;
  wire _0395_;
  wire _0396_;
  wire _0397_;
  wire _0398_;
  wire _0399_;
  wire _0400_;
  wire _0401_;
  wire _0402_;
  wire _0403_;
  wire _0404_;
  wire _0405_;
  wire _0406_;
  wire _0407_;
  wire _0408_;
  wire _0409_;
  wire _0410_;
  wire _0411_;
  wire _0412_;
  wire _0413_;
  wire _0414_;
  wire _0415_;
  wire _0416_;
  wire _0417_;
  wire _0418_;
  wire _0419_;
  wire _0420_;
  wire _0421_;
  wire _0422_;
  wire _0423_;
  wire _0424_;
  wire _0425_;
  wire _0426_;
  wire _0427_;
  wire _0428_;
  wire _0429_;
  wire _0430_;
  wire _0431_;
  wire _0432_;
  wire _0433_;
  wire _0434_;
  wire _0435_;
  wire _0436_;
  wire _0437_;
  wire _0438_;
  wire _0439_;
  wire _0440_;
  wire _0441_;
  wire _0442_;
  wire _0443_;
  wire _0444_;
  wire _0445_;
  wire _0446_;
  wire _0447_;
  wire _0448_;
  wire _0449_;
  wire _0450_;
  wire _0451_;
  wire _0452_;
  wire _0453_;
  wire _0454_;
  wire _0455_;
  wire _0456_;
  wire _0457_;
  wire _0458_;
  wire _0459_;
  wire _0460_;
  wire _0461_;
  wire _0462_;
  wire _0463_;
  wire _0464_;
  wire _0465_;
  wire _0466_;
  wire _0467_;
  wire _0468_;
  wire _0469_;
  wire _0470_;
  wire _0471_;
  wire _0472_;
  wire _0473_;
  wire _0474_;
  wire _0475_;
  wire _0476_;
  wire _0477_;
  wire _0478_;
  wire _0479_;
  wire _0480_;
  wire _0481_;
  wire _0482_;
  wire _0483_;
  wire _0484_;
  wire _0485_;
  wire _0486_;
  wire _0487_;
  wire _0488_;
  wire _0489_;
  wire _0490_;
  wire _0491_;
  wire _0492_;
  wire _0493_;
  wire _0494_;
  wire _0495_;
  wire _0496_;
  wire _0497_;
  wire _0498_;
  wire _0499_;
  wire _0500_;
  wire _0501_;
  wire _0502_;
  wire _0503_;
  wire _0504_;
  wire _0505_;
  wire _0506_;
  wire _0507_;
  wire _0508_;
  wire _0509_;
  wire _0510_;
  wire _0511_;
  wire _0512_;
  wire _0513_;
  wire _0514_;
  wire _0515_;
  wire _0516_;
  wire _0517_;
  wire _0518_;
  wire _0519_;
  wire _0520_;
  wire _0521_;
  wire _0522_;
  wire _0523_;
  wire _0524_;
  wire _0525_;
  wire _0526_;
  wire _0527_;
  wire _0528_;
  wire _0529_;
  wire _0530_;
  wire _0531_;
  wire _0532_;
  wire _0533_;
  wire _0534_;
  wire _0535_;
  wire _0536_;
  wire _0537_;
  wire _0538_;
  wire _0539_;
  wire _0540_;
  wire _0541_;
  wire _0542_;
  wire _0543_;
  wire _0544_;
  wire _0545_;
  wire _0546_;
  wire _0547_;
  wire _0548_;
  wire _0549_;
  wire _0550_;
  wire _0551_;
  wire _0552_;
  wire _0553_;
  wire _0554_;
  wire _0555_;
  wire _0556_;
  wire _0557_;
  wire _0558_;
  wire _0559_;
  wire _0560_;
  wire _0561_;
  wire _0562_;
  wire _0563_;
  wire _0564_;
  wire _0565_;
  wire _0566_;
  wire _0567_;
  wire _0568_;
  wire _0569_;
  wire _0570_;
  wire _0571_;
  wire _0572_;
  wire _0573_;
  wire _0574_;
  wire _0575_;
  wire _0576_;
  wire _0577_;
  wire _0578_;
  wire _0579_;
  wire _0580_;
  wire _0581_;
  wire _0582_;
  wire _0583_;
  wire _0584_;
  wire _0585_;
  wire _0586_;
  wire _0587_;
  wire _0588_;
  wire _0589_;
  wire _0590_;
  wire _0591_;
  wire _0592_;
  wire _0593_;
  wire _0594_;
  wire _0595_;
  wire _0596_;
  wire _0597_;
  wire _0598_;
  wire _0599_;
  wire _0600_;
  wire _0601_;
  wire _0602_;
  wire _0603_;
  wire _0604_;
  wire _0605_;
  wire _0606_;
  wire _0607_;
  wire _0608_;
  wire _0609_;
  wire _0610_;
  wire _0611_;
  wire _0612_;
  wire _0613_;
  wire _0614_;
  wire _0615_;
  wire _0616_;
  wire _0617_;
  wire _0618_;
  wire _0619_;
  wire _0620_;
  wire _0621_;
  wire _0622_;
  wire _0623_;
  wire _0624_;
  wire _0625_;
  wire _0626_;
  wire _0627_;
  wire _0628_;
  wire _0629_;
  wire _0630_;
  wire _0631_;
  wire _0632_;
  wire _0633_;
  wire _0634_;
  wire _0635_;
  wire _0636_;
  wire _0637_;
  wire _0638_;
  wire _0639_;
  wire _0640_;
  wire _0641_;
  wire _0642_;
  wire _0643_;
  wire _0644_;
  wire _0645_;
  wire _0646_;
  wire _0647_;
  wire _0648_;
  wire _0649_;
  wire _0650_;
  wire _0651_;
  wire _0652_;
  wire _0653_;
  wire _0654_;
  wire _0655_;
  wire _0656_;
  wire _0657_;
  wire _0658_;
  wire _0659_;
  wire _0660_;
  wire _0661_;
  wire _0662_;
  wire _0663_;
  wire _0664_;
  wire _0665_;
  wire _0666_;
  wire _0667_;
  wire _0668_;
  wire _0669_;
  wire _0670_;
  wire _0671_;
  wire _0672_;
  wire _0673_;
  wire _0674_;
  wire _0675_;
  wire _0676_;
  wire _0677_;
  wire _0678_;
  wire _0679_;
  wire _0680_;
  wire _0681_;
  wire _0682_;
  wire _0683_;
  wire _0684_;
  wire _0685_;
  wire _0686_;
  wire _0687_;
  wire _0688_;
  wire _0689_;
  wire _0690_;
  wire _0691_;
  wire _0692_;
  wire _0693_;
  wire _0694_;
  wire _0695_;
  wire _0696_;
  wire _0697_;
  wire _0698_;
  wire _0699_;
  wire _0700_;
  wire _0701_;
  wire _0702_;
  wire _0703_;
  wire _0704_;
  wire _0705_;
  wire _0706_;
  wire _0707_;
  wire _0708_;
  wire _0709_;
  wire _0710_;
  wire _0711_;
  wire _0712_;
  wire _0713_;
  wire _0714_;
  wire _0715_;
  wire _0716_;
  wire _0717_;
  wire [7:0] _0718_;
  wire _0719_;
  wire _0720_;
  wire _0721_;
  wire _0722_;
  wire _0723_;
  wire _0724_;
  wire _0725_;
  wire _0726_;
  wire _0727_;
  wire _0728_;
  wire _0729_;
  wire _0730_;
  wire _0731_;
  wire _0732_;
  wire _0733_;
  wire _0734_;
  wire _0735_;
  wire [20:0] _0736_;
  wire _0737_;
  wire _0738_;
  wire _0739_;
  wire _0740_;
  wire _0741_;
  wire _0742_;
  wire _0743_;
  wire _0744_;
  wire _0745_;
  wire _0746_;
  wire _0747_;
  wire _0748_;
  wire _0749_;
  wire _0750_;
  wire _0751_;
  wire _0752_;
  wire _0753_;
  wire _0754_;
  wire _0755_;
  wire _0756_;
  wire _0757_;
  wire _0758_;
  wire _0759_;
  wire _0760_;
  wire _0761_;
  wire _0762_;
  wire _0763_;
  wire _0764_;
  wire _0765_;
  wire _0766_;
  wire _0767_;
  wire _0768_;
  wire _0769_;
  wire _0770_;
  wire _0771_;
  wire _0772_;
  wire _0773_;
  wire _0774_;
  wire _0775_;
  wire _0776_;
  wire _0777_;
  wire _0778_;
  wire _0779_;
  wire [14:0] _0780_;
  reg argA_enable;
  reg argB_enable;
  wire \counter.i_clk_p ;
  wire [2:0] \counter.i_cycles ;
  wire \counter.i_rst_n ;
  wire \counter.i_we ;
  wire \counter.o_inter ;
  reg [2:0] \counter.s_count ;
  wire [2:0] \counter.s_count_next ;
  reg [2:0] \counter.s_cycles ;
  wire [7:0] \exe_unit.U2 ;
  wire [10:0] \exe_unit.crc4.crc_tmp ;
  wire [2:0] \exe_unit.crc4.i_crc ;
  wire [7:0] \exe_unit.crc4.i_data ;
  wire [3:0] \exe_unit.crc4.i_poly ;
  wire [2:0] \exe_unit.crc4.o_crc ;
  wire [2:0] \exe_unit.crc4.poly_tmp ;
  wire [10:0] \exe_unit.crc4_chck.crc_tmp ;
  wire [2:0] \exe_unit.crc4_chck.i_crc ;
  wire [7:0] \exe_unit.crc4_chck.i_data ;
  wire [3:0] \exe_unit.crc4_chck.i_poly ;
  wire [2:0] \exe_unit.crc4_chck.o_crc ;
  wire [2:0] \exe_unit.crc4_chck.poly_tmp ;
  wire [2:0] \exe_unit.encode ;
  wire [7:0] \exe_unit.i_argA ;
  wire [7:0] \exe_unit.i_argB ;
  wire [3:0] \exe_unit.i_oper ;
  wire \exe_unit.o_BF ;
  wire \exe_unit.o_NF ;
  wire \exe_unit.o_OF ;
  wire \exe_unit.o_SF ;
  wire \exe_unit.o_err ;
  wire [7:0] \exe_unit.o_result ;
  wire [7:0] \exe_unit.onehot.i_onehot ;
  wire \exe_unit.onehot.o_err ;
  wire [2:0] \exe_unit.onehot.o_nkb ;
  wire [7:0] \exe_unit.pEncoder.i_data ;
  wire [2:0] \exe_unit.pEncoder.o_y ;
  wire [2:0] \exe_unit.s_crc4 ;
  wire [2:0] \exe_unit.s_crc4_chk ;
  wire [2:0] \exe_unit.s_onehot ;
  wire [3:0] \exe_unit.s_z1 ;
  wire [7:0] \exe_unit.sign1.i_data ;
  wire [7:0] \exe_unit.sign1.o_u2 ;
  wire [7:0] \exe_unit.signModule ;
  wire [7:0] \exe_unit.u2_1.i_data ;
  wire [7:0] \exe_unit.u2_1.o_res ;
  wire [15:0] \exe_unit.z1.i_data ;
  wire [3:0] \exe_unit.z1.o_amountOfZeroes ;
  wire [3:0] \exe_unit.z1.s_zero ;
  input i_cs;
  input i_mosi;
  input i_rst;
  input i_sclk;
  output o_miso;
  reg oper_enable;
  reg [7:0] s_argA;
  reg [7:0] s_argA_next;
  reg [7:0] s_argB;
  reg [7:0] s_argB_next;
  wire [2:0] s_cycles;
  wire [7:0] s_data_next;
  wire s_en_in;
  wire s_en_out;
  reg [3:0] s_flags;
  wire [3:0] s_flags_next;
  wire s_inter;
  reg [3:0] s_oper;
  reg [3:0] s_oper_next;
  reg [7:0] s_result;
  wire [7:0] s_result_next;
  reg [2:0] s_state;
  wire [2:0] s_state_next;
  wire s_we;
  wire s_wrt_in;
  wire s_wrt_out;
  wire \shift_in.i_bit ;
  wire \shift_in.i_clk_p ;
  wire [7:0] \shift_in.i_data ;
  wire \shift_in.i_en ;
  wire \shift_in.i_rst_n ;
  wire \shift_in.i_wrt ;
  wire \shift_in.o_bit ;
  wire [7:0] \shift_in.o_data ;
  reg [7:0] \shift_in.s_shifter ;
  wire \shift_out.i_bit ;
  wire \shift_out.i_clk_p ;
  wire [20:0] \shift_out.i_data ;
  wire \shift_out.i_en ;
  wire \shift_out.i_rst_n ;
  wire \shift_out.i_wrt ;
  wire \shift_out.o_bit ;
  wire [20:0] \shift_out.o_data ;
  reg [20:0] \shift_out.s_shifter ;
  assign _0009_ = ~s_state[2];
  assign s_state_next[0] = ~s_state[0];
  assign _0010_ = ~s_state[1];
  assign _0011_ = ~s_inter;
  assign _0012_ = ~i_cs;
  assign _0013_ = s_state[0] & s_state[1];
  assign _0014_ = s_state[2] & _0013_;
  assign _0008_ = ~_0014_;
  assign _0015_ = s_state[0] | s_state[1];
  assign _0016_ = ~_0015_;
  assign _0017_ = s_state[2] | _0015_;
  assign _0018_ = ~_0017_;
  assign _0019_ = _0012_ | _0017_;
  assign _0020_ = s_state_next[0] | s_inter;
  assign _0003_ = _0019_ & _0020_;
  assign _0021_ = _0009_ & _0013_;
  assign _0004_ = ~_0021_;
  assign _0022_ = s_state[0] & _0010_;
  assign _0023_ = s_state_next[0] | s_state[1];
  assign _0005_ = _0009_ | _0023_;
  assign _0024_ = s_inter & _0022_;
  assign _0001_ = _0009_ & _0024_;
  assign _0006_ = ~_0001_;
  assign _0025_ = _0011_ & _0014_;
  assign _0026_ = s_state_next[0] & s_state[1];
  assign _0027_ = s_state[2] & _0026_;
  assign _0007_ = _0025_ | _0027_;
  assign _0780_[7] = s_state[2] & _0024_;
  assign _0002_[0] = _0011_ | s_data_next[0];
  assign _0002_[1] = _0011_ | s_data_next[1];
  assign _0002_[2] = _0011_ | s_data_next[2];
  assign _0002_[3] = _0011_ | s_data_next[3];
  assign _0002_[4] = _0011_ | s_data_next[4];
  assign _0002_[5] = _0011_ | s_data_next[5];
  assign _0002_[6] = _0011_ | s_data_next[6];
  assign _0002_[7] = _0011_ | s_data_next[7];
  assign _0028_ = _0012_ & _0018_;
  assign _0029_ = s_state[2] & _0016_;
  assign _0030_ = _0009_ & _0026_;
  assign _0031_ = _0026_ | _0029_;
  assign s_cycles[2] = _0029_ | _0030_;
  assign _0032_ = s_state[0] | s_cycles[2];
  assign s_en_in = _0028_ | _0032_;
  assign s_we = _0028_ | _0031_;
  assign s_cycles[0] = _0027_ | _0028_;
  assign _0033_ = _0780_[7] | _0029_;
  assign s_cycles[1] = s_cycles[0] | _0033_;
  assign s_state_next[1] = _0022_ | _0026_;
  assign s_state_next[2] = s_state[2] ^ _0013_;
  assign _0000_ = s_inter & _0021_;
  assign s_wrt_out = s_inter & _0014_;
  always @*
    if (!_0004_) s_argA_next[0] = _0002_[0];
  always @*
    if (!_0004_) s_argA_next[1] = _0002_[1];
  always @*
    if (!_0004_) s_argA_next[2] = _0002_[2];
  always @*
    if (!_0004_) s_argA_next[3] = _0002_[3];
  always @*
    if (!_0004_) s_argA_next[4] = _0002_[4];
  always @*
    if (!_0004_) s_argA_next[5] = _0002_[5];
  always @*
    if (!_0004_) s_argA_next[6] = _0002_[6];
  always @*
    if (!_0004_) s_argA_next[7] = _0002_[7];
  always @*
    if (!_0005_) s_argB_next[0] = _0002_[0];
  always @*
    if (!_0005_) s_argB_next[1] = _0002_[1];
  always @*
    if (!_0005_) s_argB_next[2] = _0002_[2];
  always @*
    if (!_0005_) s_argB_next[3] = _0002_[3];
  always @*
    if (!_0005_) s_argB_next[4] = _0002_[4];
  always @*
    if (!_0005_) s_argB_next[5] = _0002_[5];
  always @*
    if (!_0005_) s_argB_next[6] = _0002_[6];
  always @*
    if (!_0005_) s_argB_next[7] = _0002_[7];
  always @*
    if (!_0006_) s_oper_next[0] = s_data_next[4];
  always @*
    if (!_0006_) s_oper_next[1] = s_data_next[5];
  always @*
    if (!_0006_) s_oper_next[2] = s_data_next[6];
  always @*
    if (!_0006_) s_oper_next[3] = s_data_next[7];
  always @*
    if (!_0007_) argA_enable = _0000_;
  always @*
    if (!_0007_) argB_enable = _0780_[7];
  always @*
    if (!_0007_) oper_enable = _0001_;
  always @(posedge i_sclk, negedge i_rst)
    if (!i_rst) s_state[0] <= 1'h0;
    else if (_0003_) s_state[0] <= s_state_next[0];
  always @(posedge i_sclk, negedge i_rst)
    if (!i_rst) s_state[1] <= 1'h0;
    else if (_0003_) s_state[1] <= s_state_next[1];
  always @(posedge i_sclk, negedge i_rst)
    if (!i_rst) s_state[2] <= 1'h0;
    else if (_0003_) s_state[2] <= s_state_next[2];
  always @(posedge i_sclk, negedge i_rst)
    if (!i_rst) s_flags[0] <= 1'h0;
    else if (!_0008_) s_flags[0] <= s_flags_next[0];
  always @(posedge i_sclk, negedge i_rst)
    if (!i_rst) s_flags[1] <= 1'h0;
    else if (!_0008_) s_flags[1] <= s_flags_next[1];
  always @(posedge i_sclk, negedge i_rst)
    if (!i_rst) s_flags[2] <= 1'h0;
    else if (!_0008_) s_flags[2] <= s_flags_next[2];
  always @(posedge i_sclk, negedge i_rst)
    if (!i_rst) s_flags[3] <= 1'h0;
    else if (!_0008_) s_flags[3] <= s_flags_next[3];
  always @(posedge i_sclk, negedge i_rst)
    if (!i_rst) s_result[0] <= 1'h0;
    else if (!_0008_) s_result[0] <= s_result_next[0];
  always @(posedge i_sclk, negedge i_rst)
    if (!i_rst) s_result[1] <= 1'h0;
    else if (!_0008_) s_result[1] <= s_result_next[1];
  always @(posedge i_sclk, negedge i_rst)
    if (!i_rst) s_result[2] <= 1'h0;
    else if (!_0008_) s_result[2] <= s_result_next[2];
  always @(posedge i_sclk, negedge i_rst)
    if (!i_rst) s_result[3] <= 1'h0;
    else if (!_0008_) s_result[3] <= s_result_next[3];
  always @(posedge i_sclk, negedge i_rst)
    if (!i_rst) s_result[4] <= 1'h0;
    else if (!_0008_) s_result[4] <= s_result_next[4];
  always @(posedge i_sclk, negedge i_rst)
    if (!i_rst) s_result[5] <= 1'h0;
    else if (!_0008_) s_result[5] <= s_result_next[5];
  always @(posedge i_sclk, negedge i_rst)
    if (!i_rst) s_result[6] <= 1'h0;
    else if (!_0008_) s_result[6] <= s_result_next[6];
  always @(posedge i_sclk, negedge i_rst)
    if (!i_rst) s_result[7] <= 1'h0;
    else if (!_0008_) s_result[7] <= s_result_next[7];
  always @(posedge i_sclk, negedge i_rst)
    if (!i_rst) s_oper[0] <= 1'h0;
    else if (oper_enable) s_oper[0] <= s_oper_next[0];
  always @(posedge i_sclk, negedge i_rst)
    if (!i_rst) s_oper[1] <= 1'h0;
    else if (oper_enable) s_oper[1] <= s_oper_next[1];
  always @(posedge i_sclk, negedge i_rst)
    if (!i_rst) s_oper[2] <= 1'h0;
    else if (oper_enable) s_oper[2] <= s_oper_next[2];
  always @(posedge i_sclk, negedge i_rst)
    if (!i_rst) s_oper[3] <= 1'h0;
    else if (oper_enable) s_oper[3] <= s_oper_next[3];
  always @(posedge i_sclk, negedge i_rst)
    if (!i_rst) s_argB[0] <= 1'h0;
    else if (argB_enable) s_argB[0] <= s_argB_next[0];
  always @(posedge i_sclk, negedge i_rst)
    if (!i_rst) s_argB[1] <= 1'h0;
    else if (argB_enable) s_argB[1] <= s_argB_next[1];
  always @(posedge i_sclk, negedge i_rst)
    if (!i_rst) s_argB[2] <= 1'h0;
    else if (argB_enable) s_argB[2] <= s_argB_next[2];
  always @(posedge i_sclk, negedge i_rst)
    if (!i_rst) s_argB[3] <= 1'h0;
    else if (argB_enable) s_argB[3] <= s_argB_next[3];
  always @(posedge i_sclk, negedge i_rst)
    if (!i_rst) s_argB[4] <= 1'h0;
    else if (argB_enable) s_argB[4] <= s_argB_next[4];
  always @(posedge i_sclk, negedge i_rst)
    if (!i_rst) s_argB[5] <= 1'h0;
    else if (argB_enable) s_argB[5] <= s_argB_next[5];
  always @(posedge i_sclk, negedge i_rst)
    if (!i_rst) s_argB[6] <= 1'h0;
    else if (argB_enable) s_argB[6] <= s_argB_next[6];
  always @(posedge i_sclk, negedge i_rst)
    if (!i_rst) s_argB[7] <= 1'h0;
    else if (argB_enable) s_argB[7] <= s_argB_next[7];
  always @(posedge i_sclk, negedge i_rst)
    if (!i_rst) s_argA[0] <= 1'h0;
    else if (argA_enable) s_argA[0] <= s_argA_next[0];
  always @(posedge i_sclk, negedge i_rst)
    if (!i_rst) s_argA[1] <= 1'h0;
    else if (argA_enable) s_argA[1] <= s_argA_next[1];
  always @(posedge i_sclk, negedge i_rst)
    if (!i_rst) s_argA[2] <= 1'h0;
    else if (argA_enable) s_argA[2] <= s_argA_next[2];
  always @(posedge i_sclk, negedge i_rst)
    if (!i_rst) s_argA[3] <= 1'h0;
    else if (argA_enable) s_argA[3] <= s_argA_next[3];
  always @(posedge i_sclk, negedge i_rst)
    if (!i_rst) s_argA[4] <= 1'h0;
    else if (argA_enable) s_argA[4] <= s_argA_next[4];
  always @(posedge i_sclk, negedge i_rst)
    if (!i_rst) s_argA[5] <= 1'h0;
    else if (argA_enable) s_argA[5] <= s_argA_next[5];
  always @(posedge i_sclk, negedge i_rst)
    if (!i_rst) s_argA[6] <= 1'h0;
    else if (argA_enable) s_argA[6] <= s_argA_next[6];
  always @(posedge i_sclk, negedge i_rst)
    if (!i_rst) s_argA[7] <= 1'h0;
    else if (argA_enable) s_argA[7] <= s_argA_next[7];
  assign _0034_ = ~\counter.s_count [0];
  assign _0035_ = ~\counter.i_we ;
  assign _0036_ = \counter.s_count [1] | \counter.s_count [2];
  assign _0037_ = ~_0036_;
  assign _0038_ = \counter.s_cycles [0] | _0036_;
  assign _0039_ = _0034_ & _0035_;
  assign _0040_ = _0038_ & _0039_;
  assign _0041_ = \counter.i_cycles [0] & \counter.i_we ;
  assign \counter.s_count_next [0] = _0040_ | _0041_;
  assign _0042_ = _0035_ | \counter.i_cycles [1];
  assign _0043_ = \counter.s_count [0] | \counter.s_count [1];
  assign _0044_ = ~_0043_;
  assign _0045_ = \counter.s_count [2] | \counter.s_cycles [1];
  assign _0046_ = _0044_ & _0045_;
  assign _0047_ = \counter.s_count [0] & \counter.s_count [1];
  assign _0048_ = \counter.i_we  | _0047_;
  assign _0049_ = _0046_ | _0048_;
  assign \counter.s_count_next [1] = _0042_ & _0049_;
  assign _0050_ = _0037_ & _0039_;
  assign _0051_ = \counter.s_cycles [2] & _0050_;
  assign _0052_ = \counter.i_we  & \counter.i_cycles [2];
  assign _0053_ = \counter.s_count [2] & _0043_;
  assign _0054_ = _0035_ & _0053_;
  assign _0055_ = _0052_ | _0054_;
  assign \counter.s_count_next [2] = _0051_ | _0055_;
  assign _0056_ = \counter.s_cycles [0] | \counter.s_cycles [1];
  assign _0057_ = \counter.s_cycles [2] | _0056_;
  assign \counter.o_inter  = _0050_ & _0057_;
  always @(posedge \counter.i_clk_p , negedge \counter.i_rst_n )
    if (!\counter.i_rst_n ) \counter.s_count [0] <= 1'h0;
    else \counter.s_count [0] <= \counter.s_count_next [0];
  always @(posedge \counter.i_clk_p , negedge \counter.i_rst_n )
    if (!\counter.i_rst_n ) \counter.s_count [1] <= 1'h0;
    else \counter.s_count [1] <= \counter.s_count_next [1];
  always @(posedge \counter.i_clk_p , negedge \counter.i_rst_n )
    if (!\counter.i_rst_n ) \counter.s_count [2] <= 1'h0;
    else \counter.s_count [2] <= \counter.s_count_next [2];
  always @(posedge \counter.i_clk_p , negedge \counter.i_rst_n )
    if (!\counter.i_rst_n ) \counter.s_cycles [0] <= 1'h0;
    else if (\counter.i_we ) \counter.s_cycles [0] <= \counter.i_cycles [0];
  always @(posedge \counter.i_clk_p , negedge \counter.i_rst_n )
    if (!\counter.i_rst_n ) \counter.s_cycles [1] <= 1'h0;
    else if (\counter.i_we ) \counter.s_cycles [1] <= \counter.i_cycles [1];
  always @(posedge \counter.i_clk_p , negedge \counter.i_rst_n )
    if (!\counter.i_rst_n ) \counter.s_cycles [2] <= 1'h0;
    else if (\counter.i_we ) \counter.s_cycles [2] <= \counter.i_cycles [2];
  assign _0430_ = ~\exe_unit.i_argB [0];
  assign _0431_ = ~\exe_unit.i_argA [1];
  assign _0432_ = ~\exe_unit.i_argA [0];
  assign _0433_ = ~\exe_unit.i_argB [1];
  assign _0434_ = ~\exe_unit.i_oper [3];
  assign _0435_ = ~\exe_unit.i_oper [2];
  assign _0436_ = ~\exe_unit.i_oper [1];
  assign _0437_ = ~\exe_unit.i_oper [0];
  assign _0438_ = ~\exe_unit.i_argA [2];
  assign _0439_ = ~\exe_unit.i_argA [4];
  assign _0440_ = ~\exe_unit.i_argA [3];
  assign _0441_ = ~\exe_unit.i_argB [2];
  assign _0442_ = ~\exe_unit.i_argA [6];
  assign _0443_ = ~\exe_unit.i_argA [5];
  assign _0444_ = ~\exe_unit.i_argA [7];
  assign _0445_ = ~\exe_unit.i_argB [3];
  assign _0446_ = _0434_ & _0435_;
  assign _0447_ = \exe_unit.i_oper [3] | \exe_unit.i_oper [2];
  assign _0448_ = \exe_unit.i_oper [1] & \exe_unit.i_oper [0];
  assign _0449_ = ~_0448_;
  assign _0450_ = _0446_ & _0448_;
  assign _0451_ = _0447_ | _0449_;
  assign _0452_ = \exe_unit.i_argB [1] | _0451_;
  assign _0453_ = ~_0452_;
  assign _0454_ = \exe_unit.i_argB [4] | \exe_unit.i_argB [5];
  assign _0455_ = ~_0454_;
  assign _0456_ = \exe_unit.i_argB [6] | \exe_unit.i_argB [7];
  assign _0457_ = ~_0456_;
  assign _0458_ = _0455_ & _0457_;
  assign _0459_ = _0454_ | _0456_;
  assign _0460_ = _0431_ | _0459_;
  assign _0461_ = \exe_unit.i_argB [0] | _0460_;
  assign _0462_ = _0432_ | _0459_;
  assign _0463_ = _0430_ | _0462_;
  assign _0464_ = _0461_ & _0463_;
  assign _0465_ = _0452_ | _0464_;
  assign _0058_ = \exe_unit.i_argA [2] & _0458_;
  assign _0059_ = _0438_ | _0459_;
  assign _0060_ = _0430_ | _0059_;
  assign _0061_ = ~_0060_;
  assign _0062_ = _0433_ & _0441_;
  assign _0063_ = \exe_unit.i_argB [1] | \exe_unit.i_argB [2];
  assign _0064_ = _0461_ & _0060_;
  assign _0065_ = _0062_ & _0064_;
  assign _0066_ = \exe_unit.i_argB [1] & _0441_;
  assign _0067_ = _0433_ | \exe_unit.i_argB [2];
  assign _0068_ = \exe_unit.i_argA [4] & _0458_;
  assign _0069_ = _0439_ | _0459_;
  assign _0070_ = \exe_unit.i_argB [0] & _0068_;
  assign _0071_ = _0430_ | _0069_;
  assign _0072_ = \exe_unit.i_argA [3] & _0458_;
  assign _0073_ = _0440_ | _0459_;
  assign _0074_ = _0430_ & _0072_;
  assign _0075_ = \exe_unit.i_argB [0] | _0073_;
  assign _0076_ = _0071_ & _0075_;
  assign _0077_ = ~_0076_;
  assign _0078_ = _0066_ & _0076_;
  assign _0079_ = _0434_ & \exe_unit.i_oper [2];
  assign _0080_ = ~_0079_;
  assign _0081_ = _0436_ & _0437_;
  assign _0082_ = \exe_unit.i_oper [1] | \exe_unit.i_oper [0];
  assign _0083_ = _0079_ & _0081_;
  assign _0084_ = _0080_ | _0082_;
  assign _0085_ = _0065_ | _0084_;
  assign _0086_ = _0078_ | _0085_;
  assign _0087_ = _0465_ & _0086_;
  assign _0088_ = \exe_unit.i_argA [7] & _0458_;
  assign _0089_ = _0444_ | _0459_;
  assign _0090_ = _0430_ & _0088_;
  assign _0091_ = \exe_unit.i_argB [0] | _0089_;
  assign _0092_ = \exe_unit.i_argB [1] & _0083_;
  assign _0093_ = _0433_ | _0084_;
  assign _0094_ = _0090_ & _0092_;
  assign _0095_ = _0091_ | _0093_;
  assign _0096_ = \exe_unit.i_argB [1] | _0084_;
  assign _0097_ = ~_0096_;
  assign _0098_ = \exe_unit.i_argA [5] & _0458_;
  assign _0099_ = _0443_ | _0459_;
  assign _0100_ = _0430_ & _0098_;
  assign _0101_ = \exe_unit.i_argB [0] | _0099_;
  assign _0102_ = \exe_unit.i_argA [6] & _0458_;
  assign _0103_ = _0442_ | _0459_;
  assign _0104_ = \exe_unit.i_argB [0] & _0102_;
  assign _0105_ = _0430_ | _0103_;
  assign _0106_ = _0101_ & _0105_;
  assign _0107_ = _0100_ | _0104_;
  assign _0108_ = _0097_ & _0107_;
  assign _0109_ = _0096_ | _0106_;
  assign _0110_ = _0095_ & _0109_;
  assign _0111_ = _0094_ | _0108_;
  assign _0112_ = \exe_unit.i_argB [2] & _0110_;
  assign _0113_ = \exe_unit.i_argB [3] | _0112_;
  assign _0114_ = _0087_ | _0113_;
  assign _0115_ = \exe_unit.i_oper [3] & _0435_;
  assign _0116_ = _0448_ & _0115_;
  assign _0117_ = \exe_unit.encode [1] & _0116_;
  assign _0118_ = _0431_ | \exe_unit.i_argB [1];
  assign _0119_ = \exe_unit.i_argA [1] ^ \exe_unit.i_argB [1];
  assign _0120_ = ~_0119_;
  assign _0121_ = _0436_ & \exe_unit.i_oper [0];
  assign _0122_ = _0446_ & _0121_;
  assign _0123_ = _0119_ & _0122_;
  assign _0124_ = _0117_ | _0123_;
  assign _0125_ = \exe_unit.i_oper [1] & _0437_;
  assign _0126_ = _0079_ & _0125_;
  assign _0127_ = \exe_unit.s_crc4_chk [1] & _0126_;
  assign _0128_ = _0081_ & _0115_;
  assign _0129_ = \exe_unit.s_z1 [1] & _0128_;
  assign _0130_ = _0079_ & _0121_;
  assign _0131_ = \exe_unit.s_crc4 [1] & _0130_;
  assign _0132_ = _0115_ & _0121_;
  assign _0133_ = \exe_unit.signModule [1] & _0132_;
  assign _0134_ = \exe_unit.i_argB [0] & _0432_;
  assign _0135_ = _0430_ | \exe_unit.i_argA [0];
  assign _0136_ = _0120_ | _0135_;
  assign _0137_ = _0119_ | _0134_;
  assign _0138_ = _0446_ & _0081_;
  assign _0139_ = _0137_ & _0138_;
  assign _0140_ = _0136_ & _0139_;
  assign _0141_ = _0448_ & _0079_;
  assign _0142_ = \exe_unit.s_onehot [1] & _0141_;
  assign _0143_ = _0115_ & _0125_;
  assign _0144_ = \exe_unit.U2 [1] & _0143_;
  assign _0145_ = _0446_ & _0125_;
  assign _0146_ = \exe_unit.i_argA [1] & \exe_unit.i_argB [1];
  assign _0147_ = ~_0146_;
  assign _0148_ = _0145_ & _0147_;
  assign _0149_ = _0131_ | _0142_;
  assign _0150_ = _0148_ | _0149_;
  assign _0151_ = _0140_ | _0150_;
  assign _0152_ = _0124_ | _0144_;
  assign _0153_ = _0127_ | _0133_;
  assign _0154_ = _0129_ | _0153_;
  assign _0155_ = _0152_ | _0154_;
  assign _0156_ = _0151_ | _0155_;
  assign _0157_ = ~_0156_;
  assign _0158_ = _0114_ & _0157_;
  assign \exe_unit.o_result [1] = ~_0158_;
  assign _0159_ = _0441_ & _0450_;
  assign _0160_ = \exe_unit.i_argB [2] | _0451_;
  assign _0161_ = _0430_ & _0059_;
  assign _0162_ = \exe_unit.i_argB [0] | _0058_;
  assign _0163_ = \exe_unit.i_argB [0] & _0460_;
  assign _0164_ = ~_0163_;
  assign _0165_ = _0162_ & _0164_;
  assign _0166_ = _0161_ | _0163_;
  assign _0167_ = _0433_ & _0166_;
  assign _0168_ = \exe_unit.i_argB [1] | _0165_;
  assign _0169_ = \exe_unit.i_argB [0] | _0462_;
  assign _0170_ = \exe_unit.i_argB [1] & _0169_;
  assign _0171_ = ~_0170_;
  assign _0172_ = _0168_ & _0171_;
  assign _0173_ = _0167_ | _0170_;
  assign _0174_ = _0160_ | _0173_;
  assign _0175_ = \exe_unit.i_argB [2] | _0084_;
  assign _0176_ = _0430_ & _0103_;
  assign _0177_ = \exe_unit.i_argB [0] & _0089_;
  assign _0178_ = _0176_ | _0177_;
  assign _0179_ = _0096_ | _0178_;
  assign _0180_ = _0175_ & _0179_;
  assign _0181_ = _0430_ & _0069_;
  assign _0182_ = \exe_unit.i_argB [0] | _0068_;
  assign _0183_ = \exe_unit.i_argB [0] & _0099_;
  assign _0184_ = _0181_ | _0183_;
  assign _0185_ = _0066_ & _0184_;
  assign _0186_ = \exe_unit.i_argB [0] & _0073_;
  assign _0187_ = _0430_ | _0072_;
  assign _0188_ = _0161_ | _0186_;
  assign _0189_ = _0062_ & _0188_;
  assign _0190_ = _0185_ | _0189_;
  assign _0191_ = _0180_ | _0190_;
  assign _0192_ = _0174_ & _0191_;
  assign _0193_ = \exe_unit.i_argB [3] | _0192_;
  assign _0194_ = \exe_unit.i_argA [2] & \exe_unit.i_argB [2];
  assign _0195_ = ~_0194_;
  assign _0196_ = \exe_unit.i_argA [2] ^ \exe_unit.i_argB [2];
  assign _0197_ = _0118_ & _0137_;
  assign _0198_ = _0196_ | _0197_;
  assign _0199_ = _0196_ ^ _0197_;
  assign _0200_ = _0138_ & _0199_;
  assign _0201_ = _0122_ & _0196_;
  assign _0202_ = \exe_unit.s_crc4_chk [2] & _0126_;
  assign _0203_ = \exe_unit.encode [2] & _0116_;
  assign _0204_ = _0201_ | _0202_;
  assign _0205_ = _0203_ | _0204_;
  assign _0206_ = _0145_ & _0195_;
  assign _0207_ = \exe_unit.signModule [2] & _0132_;
  assign _0208_ = \exe_unit.s_onehot [2] & _0141_;
  assign _0209_ = \exe_unit.s_crc4 [2] & _0130_;
  assign _0210_ = \exe_unit.U2 [2] & _0143_;
  assign _0211_ = \exe_unit.s_z1 [2] & _0128_;
  assign _0212_ = _0209_ | _0210_;
  assign _0213_ = _0208_ | _0212_;
  assign _0214_ = _0206_ | _0211_;
  assign _0215_ = _0207_ | _0214_;
  assign _0216_ = _0205_ | _0215_;
  assign _0217_ = _0200_ | _0216_;
  assign _0218_ = _0213_ | _0217_;
  assign _0219_ = ~_0218_;
  assign _0220_ = _0193_ & _0219_;
  assign \exe_unit.o_result [2] = ~_0220_;
  assign _0221_ = \exe_unit.i_argB [4] & \exe_unit.i_argA [4];
  assign _0222_ = ~_0221_;
  assign _0223_ = \exe_unit.i_argB [4] ^ \exe_unit.i_argA [4];
  assign _0224_ = _0440_ | \exe_unit.i_argB [3];
  assign _0225_ = _0440_ & \exe_unit.i_argB [3];
  assign _0226_ = _0438_ | \exe_unit.i_argB [2];
  assign _0227_ = _0198_ & _0226_;
  assign _0228_ = _0225_ | _0227_;
  assign _0229_ = _0224_ & _0228_;
  assign _0230_ = _0223_ | _0229_;
  assign _0231_ = _0223_ ^ _0229_;
  assign _0232_ = _0138_ & _0231_;
  assign _0233_ = \exe_unit.i_argB [2] | _0165_;
  assign _0234_ = _0450_ & _0063_;
  assign _0235_ = _0233_ & _0234_;
  assign _0236_ = _0182_ & _0187_;
  assign _0237_ = _0453_ & _0236_;
  assign _0238_ = _0093_ | _0178_;
  assign _0239_ = _0096_ | _0184_;
  assign _0240_ = _0238_ & _0239_;
  assign _0241_ = ~_0240_;
  assign _0242_ = _0235_ | _0241_;
  assign _0243_ = _0237_ | _0242_;
  assign _0244_ = _0452_ | _0169_;
  assign _0245_ = \exe_unit.i_argB [2] & _0244_;
  assign _0246_ = \exe_unit.i_argB [3] | _0245_;
  assign _0247_ = ~_0246_;
  assign _0248_ = _0243_ & _0247_;
  assign _0249_ = \exe_unit.U2 [4] & _0143_;
  assign _0250_ = _0145_ & _0222_;
  assign _0251_ = _0249_ | _0250_;
  assign _0252_ = _0122_ & _0223_;
  assign _0253_ = \exe_unit.signModule [4] & _0132_;
  assign _0254_ = _0252_ | _0253_;
  assign _0255_ = _0251_ | _0254_;
  assign _0256_ = _0248_ | _0255_;
  assign \exe_unit.o_result [4] = _0232_ | _0256_;
  assign _0257_ = ~\exe_unit.o_result [4];
  assign _0258_ = \exe_unit.i_argB [5] & \exe_unit.i_argA [5];
  assign _0259_ = ~_0258_;
  assign _0260_ = \exe_unit.i_argB [5] ^ \exe_unit.i_argA [5];
  assign _0261_ = \exe_unit.i_argB [4] | _0439_;
  assign _0262_ = _0230_ & _0261_;
  assign _0263_ = _0260_ | _0262_;
  assign _0264_ = _0260_ ^ _0262_;
  assign _0265_ = _0138_ & _0264_;
  assign _0266_ = _0061_ | _0074_;
  assign _0267_ = _0067_ | _0266_;
  assign _0268_ = _0070_ | _0100_;
  assign _0269_ = _0450_ & _0268_;
  assign _0270_ = _0234_ | _0269_;
  assign _0271_ = _0267_ & _0270_;
  assign _0272_ = _0111_ | _0271_;
  assign _0273_ = \exe_unit.i_argB [2] & _0465_;
  assign _0274_ = \exe_unit.i_argB [3] | _0273_;
  assign _0275_ = ~_0274_;
  assign _0276_ = _0272_ & _0275_;
  assign _0277_ = _0122_ & _0260_;
  assign _0278_ = \exe_unit.U2 [5] & _0143_;
  assign _0279_ = _0277_ | _0278_;
  assign _0280_ = \exe_unit.signModule [5] & _0132_;
  assign _0281_ = _0145_ & _0259_;
  assign _0282_ = _0280_ | _0281_;
  assign _0283_ = _0279_ | _0282_;
  assign _0284_ = _0276_ | _0283_;
  assign \exe_unit.o_result [5] = _0265_ | _0284_;
  assign _0285_ = ~\exe_unit.o_result [5];
  assign _0286_ = \exe_unit.i_argB [6] & \exe_unit.i_argA [6];
  assign _0287_ = ~_0286_;
  assign _0288_ = \exe_unit.i_argB [6] ^ \exe_unit.i_argA [6];
  assign _0289_ = \exe_unit.i_argB [5] | _0443_;
  assign _0290_ = _0263_ & _0289_;
  assign _0291_ = _0288_ | _0290_;
  assign _0292_ = _0288_ ^ _0290_;
  assign _0293_ = _0138_ & _0292_;
  assign _0294_ = ~_0293_;
  assign _0295_ = _0452_ | _0183_;
  assign _0296_ = _0176_ | _0295_;
  assign _0297_ = _0179_ & _0296_;
  assign _0298_ = \exe_unit.i_argB [2] | _0297_;
  assign _0299_ = \exe_unit.i_argB [2] & _0172_;
  assign _0300_ = _0066_ & _0236_;
  assign _0301_ = _0299_ | _0300_;
  assign _0302_ = _0450_ & _0301_;
  assign _0303_ = ~_0302_;
  assign _0304_ = _0298_ & _0303_;
  assign _0305_ = \exe_unit.i_argB [3] | _0304_;
  assign _0306_ = _0145_ & _0287_;
  assign _0307_ = \exe_unit.signModule [6] & _0132_;
  assign _0308_ = _0306_ | _0307_;
  assign _0309_ = \exe_unit.U2 [6] & _0143_;
  assign _0310_ = _0122_ & _0288_;
  assign _0311_ = _0309_ | _0310_;
  assign _0312_ = _0308_ | _0311_;
  assign _0313_ = ~_0312_;
  assign _0314_ = _0305_ & _0313_;
  assign _0315_ = _0294_ & _0314_;
  assign \exe_unit.o_result [6] = ~_0315_;
  assign _0316_ = \exe_unit.i_argB [7] & \exe_unit.i_argA [7];
  assign _0317_ = ~_0316_;
  assign _0318_ = \exe_unit.i_argB [7] ^ \exe_unit.i_argA [7];
  assign _0319_ = \exe_unit.i_argB [6] | _0442_;
  assign _0320_ = _0291_ & _0319_;
  assign _0321_ = _0318_ ^ _0320_;
  assign _0322_ = _0138_ & _0321_;
  assign _0323_ = \exe_unit.i_argB [1] | _0266_;
  assign _0324_ = \exe_unit.i_argB [1] & _0464_;
  assign _0325_ = ~_0324_;
  assign _0326_ = _0323_ & _0325_;
  assign _0327_ = _0067_ | _0268_;
  assign _0328_ = _0063_ | _0104_;
  assign _0329_ = _0090_ | _0328_;
  assign _0330_ = _0327_ & _0329_;
  assign _0331_ = _0445_ & _0330_;
  assign _0332_ = _0091_ | _0096_;
  assign _0333_ = _0450_ & _0326_;
  assign _0334_ = _0451_ & _0332_;
  assign _0335_ = \exe_unit.i_argB [2] | _0334_;
  assign _0336_ = ~_0335_;
  assign _0337_ = _0333_ | _0336_;
  assign _0338_ = _0331_ & _0337_;
  assign _0339_ = \exe_unit.signModule [7] & _0132_;
  assign _0340_ = _0145_ & _0317_;
  assign _0341_ = _0339_ | _0340_;
  assign _0342_ = _0122_ & _0318_;
  assign _0343_ = \exe_unit.U2 [7] & _0143_;
  assign _0344_ = _0342_ | _0343_;
  assign _0345_ = _0341_ | _0344_;
  assign _0346_ = _0338_ | _0345_;
  assign \exe_unit.o_SF  = _0322_ | _0346_;
  assign _0347_ = _0159_ & _0326_;
  assign _0348_ = _0175_ & _0332_;
  assign _0349_ = ~_0348_;
  assign _0350_ = _0063_ | _0077_;
  assign _0351_ = _0067_ | _0107_;
  assign _0352_ = _0350_ & _0351_;
  assign _0353_ = _0349_ & _0352_;
  assign _0354_ = _0347_ | _0353_;
  assign _0355_ = _0445_ & _0354_;
  assign _0356_ = \exe_unit.i_argA [3] ^ \exe_unit.i_argB [3];
  assign _0357_ = _0227_ ^ _0356_;
  assign _0358_ = _0138_ & _0357_;
  assign _0359_ = _0122_ & _0356_;
  assign _0360_ = \exe_unit.i_argA [3] & \exe_unit.i_argB [3];
  assign _0361_ = ~_0360_;
  assign _0362_ = _0145_ & _0361_;
  assign _0363_ = \exe_unit.U2 [3] & _0143_;
  assign _0364_ = \exe_unit.s_z1 [3] & _0128_;
  assign _0365_ = \exe_unit.signModule [3] & _0132_;
  assign _0366_ = _0363_ | _0364_;
  assign _0367_ = _0359_ | _0366_;
  assign _0368_ = _0362_ | _0365_;
  assign _0369_ = _0367_ | _0368_;
  assign _0370_ = _0358_ | _0369_;
  assign \exe_unit.o_result [3] = _0355_ | _0370_;
  assign _0371_ = ~\exe_unit.o_result [3];
  assign _0372_ = _0430_ & _0462_;
  assign _0373_ = _0096_ | _0372_;
  assign _0374_ = _0163_ | _0373_;
  assign _0375_ = _0093_ | _0188_;
  assign _0376_ = _0441_ & _0244_;
  assign _0377_ = _0375_ & _0376_;
  assign _0378_ = _0374_ & _0377_;
  assign _0379_ = \exe_unit.i_argB [2] & _0240_;
  assign _0380_ = \exe_unit.i_argB [3] | _0379_;
  assign _0381_ = _0378_ | _0380_;
  assign _0382_ = \exe_unit.s_crc4 [0] & _0130_;
  assign _0383_ = \exe_unit.s_z1 [0] & _0128_;
  assign _0384_ = \exe_unit.signModule [0] & _0132_;
  assign _0385_ = \exe_unit.i_argA [0] | \exe_unit.i_oper [1];
  assign _0386_ = ~_0385_;
  assign _0387_ = \exe_unit.i_argB [0] | _0386_;
  assign _0388_ = _0135_ & _0387_;
  assign _0389_ = _0447_ | _0448_;
  assign _0390_ = _0388_ | _0389_;
  assign _0391_ = \exe_unit.s_onehot [0] & _0141_;
  assign _0392_ = \exe_unit.s_crc4_chk [0] & _0126_;
  assign _0393_ = \exe_unit.U2 [0] & _0143_;
  assign _0394_ = \exe_unit.encode [0] & _0116_;
  assign _0395_ = _0383_ | _0391_;
  assign _0396_ = _0392_ | _0395_;
  assign _0397_ = _0382_ | _0384_;
  assign _0398_ = _0394_ | _0397_;
  assign _0399_ = _0393_ | _0398_;
  assign _0400_ = _0396_ | _0399_;
  assign _0401_ = ~_0400_;
  assign _0402_ = _0390_ & _0401_;
  assign _0403_ = _0381_ & _0402_;
  assign \exe_unit.o_result [0] = ~_0403_;
  assign _0404_ = _0158_ | _0403_;
  assign _0405_ = ~_0404_;
  assign _0406_ = _0158_ & _0403_;
  assign _0407_ = _0158_ ^ _0403_;
  assign _0408_ = _0220_ ^ _0407_;
  assign _0409_ = _0371_ | _0408_;
  assign _0410_ = \exe_unit.o_result [3] ^ _0408_;
  assign _0411_ = _0257_ | _0410_;
  assign _0412_ = \exe_unit.o_result [4] ^ _0410_;
  assign _0413_ = _0285_ | _0412_;
  assign _0414_ = \exe_unit.o_result [5] ^ _0412_;
  assign _0415_ = _0315_ | _0414_;
  assign _0416_ = _0315_ ^ _0414_;
  assign _0417_ = \exe_unit.o_SF  ^ _0416_;
  assign \exe_unit.o_NF  = ~_0417_;
  assign _0418_ = \exe_unit.o_result [2] & \exe_unit.o_result [3];
  assign _0419_ = \exe_unit.o_result [4] & _0418_;
  assign _0420_ = _0405_ & _0419_;
  assign _0421_ = \exe_unit.o_result [5] & _0420_;
  assign _0422_ = \exe_unit.o_result [6] & _0421_;
  assign \exe_unit.o_OF  = \exe_unit.o_SF  & _0422_;
  assign _0423_ = _0220_ | _0406_;
  assign _0424_ = _0404_ & _0423_;
  assign _0425_ = _0409_ & _0424_;
  assign _0426_ = _0411_ & _0425_;
  assign _0427_ = _0413_ & _0426_;
  assign _0428_ = _0415_ & _0427_;
  assign _0429_ = \exe_unit.o_OF  | _0428_;
  assign \exe_unit.o_BF  = _0417_ & _0429_;
  assign _0466_ = \exe_unit.crc4.i_data [0] & \exe_unit.crc4.i_poly [0];
  assign \exe_unit.crc4.o_crc [0] = \exe_unit.crc4.i_crc [0] ^ _0466_;
  assign _0467_ = \exe_unit.crc4.i_poly [0] & \exe_unit.crc4.i_data [1];
  assign _0468_ = \exe_unit.crc4.i_data [0] & \exe_unit.crc4.i_poly [1];
  assign _0469_ = \exe_unit.crc4.i_crc [1] ^ _0468_;
  assign \exe_unit.crc4.o_crc [1] = _0467_ ^ _0469_;
  assign _0470_ = \exe_unit.crc4.i_poly [1] & \exe_unit.crc4.i_data [1];
  assign _0471_ = \exe_unit.crc4.i_crc [2] ^ _0470_;
  assign _0472_ = \exe_unit.crc4.i_data [0] & \exe_unit.crc4.i_poly [2];
  assign _0473_ = \exe_unit.crc4.i_poly [0] & \exe_unit.crc4.i_data [2];
  assign _0474_ = _0472_ ^ _0473_;
  assign \exe_unit.crc4.o_crc [2] = _0471_ ^ _0474_;
  assign _0475_ = \exe_unit.crc4_chck.i_data [0] & \exe_unit.crc4_chck.i_poly [0];
  assign \exe_unit.crc4_chck.o_crc [0] = \exe_unit.crc4_chck.i_crc [0] ^ _0475_;
  assign _0476_ = \exe_unit.crc4_chck.i_poly [0] & \exe_unit.crc4_chck.i_data [1];
  assign _0477_ = \exe_unit.crc4_chck.i_data [0] & \exe_unit.crc4_chck.i_poly [1];
  assign _0478_ = \exe_unit.crc4_chck.i_crc [1] ^ _0477_;
  assign \exe_unit.crc4_chck.o_crc [1] = _0476_ ^ _0478_;
  assign _0479_ = \exe_unit.crc4_chck.i_poly [1] & \exe_unit.crc4_chck.i_data [1];
  assign _0480_ = \exe_unit.crc4_chck.i_crc [2] ^ _0479_;
  assign _0481_ = \exe_unit.crc4_chck.i_data [0] & \exe_unit.crc4_chck.i_poly [2];
  assign _0482_ = \exe_unit.crc4_chck.i_poly [0] & \exe_unit.crc4_chck.i_data [2];
  assign _0483_ = _0481_ ^ _0482_;
  assign \exe_unit.crc4_chck.o_crc [2] = _0480_ ^ _0483_;
  assign _0484_ = ~\exe_unit.onehot.i_onehot [6];
  assign _0485_ = ~\exe_unit.onehot.i_onehot [1];
  assign _0486_ = ~\exe_unit.onehot.i_onehot [0];
  assign _0487_ = ~\exe_unit.onehot.i_onehot [2];
  assign _0488_ = \exe_unit.onehot.i_onehot [7] | \exe_unit.onehot.i_onehot [6];
  assign _0489_ = ~_0488_;
  assign _0490_ = \exe_unit.onehot.i_onehot [3] | \exe_unit.onehot.i_onehot [2];
  assign _0491_ = ~_0490_;
  assign _0492_ = _0485_ & _0486_;
  assign _0493_ = \exe_unit.onehot.i_onehot [1] | \exe_unit.onehot.i_onehot [0];
  assign _0494_ = _0491_ & _0492_;
  assign _0495_ = _0490_ | _0493_;
  assign _0496_ = \exe_unit.onehot.i_onehot [5] | \exe_unit.onehot.i_onehot [4];
  assign _0497_ = ~_0496_;
  assign _0498_ = \exe_unit.onehot.i_onehot [4] | _0495_;
  assign _0499_ = ~_0498_;
  assign _0500_ = _0494_ & _0497_;
  assign _0501_ = _0495_ | _0496_;
  assign _0502_ = _0488_ & _0500_;
  assign _0503_ = _0489_ | _0501_;
  assign _0504_ = \exe_unit.onehot.i_onehot [7] & \exe_unit.onehot.i_onehot [6];
  assign _0505_ = _0503_ | _0504_;
  assign _0506_ = _0490_ & _0493_;
  assign _0507_ = \exe_unit.onehot.i_onehot [3] & \exe_unit.onehot.i_onehot [2];
  assign _0508_ = \exe_unit.onehot.i_onehot [1] & \exe_unit.onehot.i_onehot [0];
  assign _0509_ = _0507_ | _0508_;
  assign _0510_ = _0496_ | _0509_;
  assign _0511_ = _0506_ | _0510_;
  assign _0512_ = \exe_unit.onehot.i_onehot [5] | _0495_;
  assign _0513_ = _0498_ & _0512_;
  assign _0514_ = _0511_ & _0513_;
  assign _0515_ = _0488_ | _0500_;
  assign _0516_ = _0514_ | _0515_;
  assign \exe_unit.onehot.o_err  = _0505_ & _0516_;
  assign _0517_ = \exe_unit.onehot.i_onehot [7] & _0484_;
  assign _0518_ = \exe_unit.onehot.i_onehot [5] | _0517_;
  assign _0519_ = _0499_ & _0518_;
  assign _0520_ = \exe_unit.onehot.i_onehot [3] & _0487_;
  assign _0521_ = \exe_unit.onehot.i_onehot [1] | _0520_;
  assign _0522_ = _0486_ & _0521_;
  assign \exe_unit.onehot.o_nkb [0] = _0519_ | _0522_;
  assign _0523_ = _0490_ & _0492_;
  assign \exe_unit.onehot.o_nkb [1] = _0502_ | _0523_;
  assign _0524_ = _0488_ | _0496_;
  assign \exe_unit.onehot.o_nkb [2] = _0494_ & _0524_;
  assign _0525_ = ~\exe_unit.pEncoder.i_data [6];
  assign _0526_ = ~\exe_unit.pEncoder.i_data [4];
  assign _0527_ = ~\exe_unit.pEncoder.i_data [0];
  assign _0528_ = \exe_unit.pEncoder.i_data [5] | _0526_;
  assign _0529_ = _0525_ & _0528_;
  assign _0530_ = \exe_unit.pEncoder.i_data [7] | _0529_;
  assign _0531_ = \exe_unit.pEncoder.i_data [5] | \exe_unit.pEncoder.i_data [4];
  assign _0532_ = ~_0531_;
  assign _0533_ = \exe_unit.pEncoder.i_data [7] | \exe_unit.pEncoder.i_data [6];
  assign _0534_ = _0531_ | _0533_;
  assign _0535_ = \exe_unit.pEncoder.i_data [3] | _0534_;
  assign _0536_ = _0530_ & _0535_;
  assign _0537_ = \exe_unit.pEncoder.i_data [2] | _0535_;
  assign _0538_ = ~_0537_;
  assign _0539_ = _0536_ | _0538_;
  assign _0540_ = \exe_unit.pEncoder.i_data [1] | _0537_;
  assign _0541_ = ~_0540_;
  assign _0542_ = _0527_ | _0540_;
  assign \exe_unit.pEncoder.o_y [0] = _0539_ & _0542_;
  assign _0543_ = _0532_ | _0533_;
  assign _0544_ = _0537_ & _0543_;
  assign _0545_ = _0527_ & _0541_;
  assign \exe_unit.pEncoder.o_y [1] = _0544_ | _0545_;
  assign \exe_unit.pEncoder.o_y [2] = _0534_ | _0545_;
  assign _0546_ = ~\exe_unit.sign1.i_data [7];
  assign _0547_ = \exe_unit.sign1.i_data [1] | \exe_unit.sign1.i_data [0];
  assign _0548_ = \exe_unit.sign1.i_data [7] & _0547_;
  assign _0549_ = \exe_unit.sign1.i_data [1] & \exe_unit.sign1.i_data [0];
  assign _0550_ = ~_0549_;
  assign _0551_ = _0548_ & _0550_;
  assign _0552_ = \exe_unit.sign1.i_data [1] & _0546_;
  assign \exe_unit.sign1.o_u2 [1] = _0551_ | _0552_;
  assign \exe_unit.sign1.o_u2 [2] = \exe_unit.sign1.i_data [2] ^ _0548_;
  assign _0553_ = \exe_unit.sign1.i_data [2] | _0547_;
  assign _0554_ = \exe_unit.sign1.i_data [7] & _0553_;
  assign \exe_unit.sign1.o_u2 [3] = \exe_unit.sign1.i_data [3] ^ _0554_;
  assign _0555_ = \exe_unit.sign1.i_data [3] | _0553_;
  assign _0556_ = \exe_unit.sign1.i_data [7] & _0555_;
  assign \exe_unit.sign1.o_u2 [4] = \exe_unit.sign1.i_data [4] ^ _0556_;
  assign _0557_ = \exe_unit.sign1.i_data [7] & \exe_unit.sign1.i_data [4];
  assign _0558_ = _0556_ | _0557_;
  assign _0559_ = \exe_unit.sign1.i_data [5] | _0558_;
  assign \exe_unit.sign1.o_u2 [5] = \exe_unit.sign1.i_data [5] ^ _0558_;
  assign _0560_ = \exe_unit.sign1.i_data [7] & _0559_;
  assign _0561_ = \exe_unit.sign1.i_data [6] | _0560_;
  assign \exe_unit.sign1.o_u2 [6] = \exe_unit.sign1.i_data [6] ^ _0560_;
  assign \exe_unit.sign1.o_u2 [7] = \exe_unit.sign1.i_data [7] & _0561_;
  assign _0562_ = ~\exe_unit.u2_1.i_data [7];
  assign _0563_ = \exe_unit.u2_1.i_data [1] | \exe_unit.u2_1.i_data [0];
  assign _0564_ = \exe_unit.u2_1.i_data [7] & _0563_;
  assign _0565_ = \exe_unit.u2_1.i_data [1] & \exe_unit.u2_1.i_data [0];
  assign _0566_ = ~_0565_;
  assign _0567_ = _0564_ & _0566_;
  assign _0568_ = \exe_unit.u2_1.i_data [1] & _0562_;
  assign \exe_unit.u2_1.o_res [1] = _0567_ | _0568_;
  assign _0569_ = \exe_unit.u2_1.i_data [7] & \exe_unit.u2_1.i_data [2];
  assign \exe_unit.u2_1.o_res [2] = \exe_unit.u2_1.i_data [2] ^ _0564_;
  assign _0570_ = _0564_ | _0569_;
  assign _0571_ = \exe_unit.u2_1.i_data [3] | _0570_;
  assign \exe_unit.u2_1.o_res [3] = \exe_unit.u2_1.i_data [3] ^ _0570_;
  assign _0572_ = \exe_unit.u2_1.i_data [7] & _0571_;
  assign _0573_ = \exe_unit.u2_1.i_data [4] | _0572_;
  assign \exe_unit.u2_1.o_res [4] = \exe_unit.u2_1.i_data [4] ^ _0572_;
  assign _0574_ = \exe_unit.u2_1.i_data [7] & _0573_;
  assign \exe_unit.u2_1.o_res [5] = \exe_unit.u2_1.i_data [5] ^ _0574_;
  assign _0575_ = \exe_unit.u2_1.i_data [5] | _0573_;
  assign _0576_ = \exe_unit.u2_1.i_data [7] & _0575_;
  assign \exe_unit.u2_1.o_res [6] = \exe_unit.u2_1.i_data [6] ^ _0576_;
  assign _0640_ = ~\exe_unit.z1.i_data [5];
  assign _0641_ = ~\exe_unit.z1.i_data [3];
  assign _0642_ = ~\exe_unit.z1.i_data [4];
  assign _0643_ = ~\exe_unit.z1.i_data [6];
  assign _0644_ = ~\exe_unit.z1.i_data [9];
  assign _0645_ = ~\exe_unit.z1.i_data [10];
  assign _0646_ = ~\exe_unit.z1.i_data [11];
  assign _0647_ = ~\exe_unit.z1.i_data [12];
  assign _0648_ = ~\exe_unit.z1.i_data [14];
  assign _0649_ = \exe_unit.z1.i_data [0] | \exe_unit.z1.i_data [1];
  assign _0650_ = \exe_unit.z1.i_data [2] | _0649_;
  assign _0651_ = ~_0650_;
  assign _0652_ = \exe_unit.z1.i_data [0] & \exe_unit.z1.i_data [1];
  assign _0653_ = \exe_unit.z1.i_data [2] & _0652_;
  assign _0654_ = ~_0653_;
  assign _0655_ = \exe_unit.z1.i_data [2] | _0652_;
  assign _0656_ = _0649_ & _0655_;
  assign _0657_ = _0651_ | _0656_;
  assign _0658_ = _0654_ & _0657_;
  assign _0659_ = ~_0658_;
  assign _0660_ = \exe_unit.z1.i_data [3] & _0659_;
  assign _0661_ = _0641_ | _0658_;
  assign _0662_ = _0641_ & _0658_;
  assign _0663_ = \exe_unit.z1.i_data [3] | _0659_;
  assign _0664_ = _0641_ ^ _0658_;
  assign _0665_ = \exe_unit.z1.i_data [4] ^ _0664_;
  assign _0666_ = \exe_unit.z1.i_data [5] | _0665_;
  assign _0667_ = _0640_ ^ _0665_;
  assign _0668_ = \exe_unit.z1.i_data [6] | _0667_;
  assign _0669_ = _0643_ ^ _0667_;
  assign _0670_ = \exe_unit.z1.i_data [7] | _0669_;
  assign _0671_ = ~_0670_;
  assign _0672_ = \exe_unit.z1.i_data [7] ^ _0669_;
  assign _0673_ = ~_0672_;
  assign _0674_ = \exe_unit.z1.i_data [8] | _0673_;
  assign _0675_ = ~_0674_;
  assign _0676_ = \exe_unit.z1.i_data [8] ^ _0672_;
  assign _0677_ = \exe_unit.z1.i_data [9] | _0676_;
  assign _0678_ = _0644_ ^ _0676_;
  assign _0679_ = \exe_unit.z1.i_data [10] | _0678_;
  assign _0680_ = ~_0679_;
  assign _0681_ = _0645_ ^ _0678_;
  assign _0682_ = \exe_unit.z1.i_data [11] | _0681_;
  assign _0683_ = _0646_ ^ _0681_;
  assign _0684_ = \exe_unit.z1.i_data [12] | _0683_;
  assign _0685_ = ~_0684_;
  assign _0686_ = _0647_ ^ _0683_;
  assign _0687_ = \exe_unit.z1.i_data [13] | _0686_;
  assign _0688_ = ~_0687_;
  assign _0689_ = \exe_unit.z1.i_data [13] ^ _0686_;
  assign _0690_ = ~_0689_;
  assign _0691_ = _0648_ & _0689_;
  assign _0692_ = \exe_unit.z1.i_data [14] | _0690_;
  assign _0693_ = \exe_unit.z1.i_data [14] ^ _0689_;
  assign _0694_ = \exe_unit.z1.i_data [15] | _0693_;
  assign \exe_unit.z1.o_amountOfZeroes [0] = \exe_unit.z1.i_data [15] ^ _0693_;
  assign _0695_ = _0684_ & _0687_;
  assign _0696_ = _0666_ & _0668_;
  assign _0697_ = \exe_unit.z1.i_data [4] & _0663_;
  assign _0698_ = _0642_ | _0662_;
  assign _0699_ = _0661_ & _0698_;
  assign _0700_ = _0660_ | _0697_;
  assign _0701_ = _0656_ & _0700_;
  assign _0702_ = _0656_ | _0700_;
  assign _0703_ = _0656_ ^ _0699_;
  assign _0704_ = ~_0703_;
  assign _0705_ = _0696_ ^ _0704_;
  assign _0706_ = _0670_ | _0705_;
  assign _0707_ = _0670_ ^ _0705_;
  assign _0708_ = _0671_ ^ _0705_;
  assign _0709_ = _0677_ | _0708_;
  assign _0710_ = _0677_ ^ _0708_;
  assign _0711_ = _0677_ ^ _0707_;
  assign _0712_ = _0674_ & _0711_;
  assign _0713_ = _0675_ | _0710_;
  assign _0714_ = _0674_ | _0705_;
  assign _0715_ = ~_0714_;
  assign _0716_ = _0713_ & _0714_;
  assign _0717_ = _0712_ | _0715_;
  assign _0577_ = _0679_ & _0682_;
  assign _0578_ = _0716_ ^ _0577_;
  assign _0579_ = _0717_ ^ _0577_;
  assign _0580_ = _0695_ ^ _0578_;
  assign _0581_ = _0695_ ^ _0579_;
  assign _0582_ = _0692_ & _0694_;
  assign _0583_ = _0691_ & _0580_;
  assign _0584_ = _0692_ | _0581_;
  assign _0585_ = _0694_ | _0581_;
  assign _0586_ = ~_0585_;
  assign \exe_unit.z1.o_amountOfZeroes [1] = _0581_ ^ _0582_;
  assign _0587_ = _0682_ | _0717_;
  assign _0588_ = ~_0587_;
  assign _0589_ = _0680_ & _0716_;
  assign _0590_ = _0679_ | _0717_;
  assign _0591_ = _0709_ & _0714_;
  assign _0592_ = ~_0591_;
  assign _0593_ = _0696_ & _0702_;
  assign _0594_ = _0701_ | _0593_;
  assign _0595_ = _0706_ | _0594_;
  assign _0596_ = ~_0595_;
  assign _0597_ = _0706_ ^ _0594_;
  assign _0598_ = ~_0597_;
  assign _0599_ = _0592_ & _0597_;
  assign _0600_ = _0591_ | _0598_;
  assign _0601_ = _0591_ ^ _0597_;
  assign _0602_ = ~_0601_;
  assign _0603_ = _0589_ & _0602_;
  assign _0604_ = _0590_ | _0601_;
  assign _0605_ = _0589_ ^ _0602_;
  assign _0606_ = _0590_ ^ _0602_;
  assign _0607_ = _0588_ & _0605_;
  assign _0608_ = _0587_ | _0606_;
  assign _0609_ = _0588_ ^ _0605_;
  assign _0610_ = _0587_ ^ _0605_;
  assign _0611_ = _0685_ & _0579_;
  assign _0612_ = _0684_ | _0578_;
  assign _0613_ = _0609_ & _0611_;
  assign _0614_ = _0610_ | _0612_;
  assign _0615_ = _0609_ ^ _0611_;
  assign _0616_ = _0610_ ^ _0611_;
  assign _0617_ = _0688_ & _0579_;
  assign _0618_ = _0687_ | _0578_;
  assign _0619_ = _0615_ & _0617_;
  assign _0620_ = _0616_ | _0618_;
  assign _0621_ = _0615_ ^ _0617_;
  assign _0622_ = _0583_ & _0621_;
  assign _0623_ = _0583_ ^ _0621_;
  assign _0624_ = _0584_ ^ _0621_;
  assign _0625_ = _0586_ & _0623_;
  assign _0626_ = _0585_ | _0624_;
  assign \exe_unit.z1.o_amountOfZeroes [2] = _0586_ ^ _0623_;
  assign _0627_ = _0595_ & _0600_;
  assign _0628_ = _0596_ | _0599_;
  assign _0629_ = _0604_ & _0627_;
  assign _0630_ = _0603_ | _0628_;
  assign _0631_ = _0608_ & _0629_;
  assign _0632_ = _0607_ | _0630_;
  assign _0633_ = _0614_ & _0631_;
  assign _0634_ = _0613_ | _0632_;
  assign _0635_ = _0620_ & _0633_;
  assign _0636_ = _0619_ | _0634_;
  assign _0637_ = _0625_ & _0635_;
  assign _0638_ = _0622_ | _0636_;
  assign _0639_ = _0626_ & _0638_;
  assign \exe_unit.z1.o_amountOfZeroes [3] = _0637_ | _0639_;
  assign _0719_ = ~\shift_in.i_wrt ;
  assign _0720_ = \shift_in.i_data [0] & \shift_in.i_wrt ;
  assign _0721_ = \shift_in.i_bit  & _0719_;
  assign _0718_[0] = _0720_ | _0721_;
  assign _0722_ = \shift_in.i_wrt  & \shift_in.i_data [1];
  assign _0723_ = _0719_ & \shift_in.s_shifter [0];
  assign _0718_[1] = _0722_ | _0723_;
  assign _0724_ = \shift_in.i_wrt  & \shift_in.i_data [2];
  assign _0725_ = _0719_ & \shift_in.s_shifter [1];
  assign _0718_[2] = _0724_ | _0725_;
  assign _0726_ = \shift_in.i_wrt  & \shift_in.i_data [3];
  assign _0727_ = _0719_ & \shift_in.s_shifter [2];
  assign _0718_[3] = _0726_ | _0727_;
  assign _0728_ = \shift_in.i_wrt  & \shift_in.i_data [4];
  assign _0729_ = _0719_ & \shift_in.s_shifter [3];
  assign _0718_[4] = _0728_ | _0729_;
  assign _0730_ = \shift_in.i_wrt  & \shift_in.i_data [5];
  assign _0731_ = _0719_ & \shift_in.s_shifter [4];
  assign _0718_[5] = _0730_ | _0731_;
  assign _0732_ = \shift_in.i_wrt  & \shift_in.i_data [6];
  assign _0733_ = _0719_ & \shift_in.s_shifter [5];
  assign _0718_[6] = _0732_ | _0733_;
  assign _0734_ = \shift_in.i_wrt  & \shift_in.i_data [7];
  assign _0735_ = _0719_ & \shift_in.s_shifter [6];
  assign _0718_[7] = _0734_ | _0735_;
  always @(posedge \shift_in.i_clk_p , negedge \shift_in.i_rst_n )
    if (!\shift_in.i_rst_n ) \shift_in.s_shifter [0] <= 1'h0;
    else if (\shift_in.i_en ) \shift_in.s_shifter [0] <= _0718_[0];
  always @(posedge \shift_in.i_clk_p , negedge \shift_in.i_rst_n )
    if (!\shift_in.i_rst_n ) \shift_in.s_shifter [1] <= 1'h0;
    else if (\shift_in.i_en ) \shift_in.s_shifter [1] <= _0718_[1];
  always @(posedge \shift_in.i_clk_p , negedge \shift_in.i_rst_n )
    if (!\shift_in.i_rst_n ) \shift_in.s_shifter [2] <= 1'h0;
    else if (\shift_in.i_en ) \shift_in.s_shifter [2] <= _0718_[2];
  always @(posedge \shift_in.i_clk_p , negedge \shift_in.i_rst_n )
    if (!\shift_in.i_rst_n ) \shift_in.s_shifter [3] <= 1'h0;
    else if (\shift_in.i_en ) \shift_in.s_shifter [3] <= _0718_[3];
  always @(posedge \shift_in.i_clk_p , negedge \shift_in.i_rst_n )
    if (!\shift_in.i_rst_n ) \shift_in.s_shifter [4] <= 1'h0;
    else if (\shift_in.i_en ) \shift_in.s_shifter [4] <= _0718_[4];
  always @(posedge \shift_in.i_clk_p , negedge \shift_in.i_rst_n )
    if (!\shift_in.i_rst_n ) \shift_in.s_shifter [5] <= 1'h0;
    else if (\shift_in.i_en ) \shift_in.s_shifter [5] <= _0718_[5];
  always @(posedge \shift_in.i_clk_p , negedge \shift_in.i_rst_n )
    if (!\shift_in.i_rst_n ) \shift_in.s_shifter [6] <= 1'h0;
    else if (\shift_in.i_en ) \shift_in.s_shifter [6] <= _0718_[6];
  always @(posedge \shift_in.i_clk_p , negedge \shift_in.i_rst_n )
    if (!\shift_in.i_rst_n ) \shift_in.s_shifter [7] <= 1'h0;
    else if (\shift_in.i_en ) \shift_in.s_shifter [7] <= _0718_[7];
  assign _0756_ = ~\shift_out.i_wrt ;
  assign _0757_ = \shift_out.i_data [0] & \shift_out.i_wrt ;
  assign _0758_ = \shift_out.i_bit  & _0756_;
  assign _0736_[0] = _0757_ | _0758_;
  assign _0759_ = \shift_out.i_wrt  & \shift_out.i_data [1];
  assign _0760_ = _0756_ & \shift_out.s_shifter [0];
  assign _0736_[1] = _0759_ | _0760_;
  assign _0761_ = \shift_out.i_wrt  & \shift_out.i_data [2];
  assign _0762_ = _0756_ & \shift_out.s_shifter [1];
  assign _0736_[2] = _0761_ | _0762_;
  assign _0763_ = \shift_out.i_wrt  & \shift_out.i_data [3];
  assign _0764_ = _0756_ & \shift_out.s_shifter [2];
  assign _0736_[3] = _0763_ | _0764_;
  assign _0765_ = \shift_out.i_wrt  & \shift_out.i_data [4];
  assign _0766_ = _0756_ & \shift_out.s_shifter [3];
  assign _0736_[4] = _0765_ | _0766_;
  assign _0767_ = \shift_out.i_wrt  & \shift_out.i_data [5];
  assign _0768_ = _0756_ & \shift_out.s_shifter [4];
  assign _0736_[5] = _0767_ | _0768_;
  assign _0769_ = \shift_out.i_wrt  & \shift_out.i_data [6];
  assign _0770_ = _0756_ & \shift_out.s_shifter [5];
  assign _0736_[6] = _0769_ | _0770_;
  assign _0771_ = \shift_out.i_wrt  & \shift_out.i_data [7];
  assign _0772_ = _0756_ & \shift_out.s_shifter [6];
  assign _0736_[7] = _0771_ | _0772_;
  assign _0773_ = \shift_out.i_wrt  & \shift_out.i_data [8];
  assign _0774_ = _0756_ & \shift_out.s_shifter [7];
  assign _0736_[8] = _0773_ | _0774_;
  assign _0775_ = \shift_out.i_wrt  & \shift_out.i_data [9];
  assign _0776_ = _0756_ & \shift_out.s_shifter [8];
  assign _0736_[9] = _0775_ | _0776_;
  assign _0777_ = \shift_out.i_wrt  & \shift_out.i_data [10];
  assign _0778_ = _0756_ & \shift_out.s_shifter [9];
  assign _0736_[10] = _0777_ | _0778_;
  assign _0779_ = \shift_out.i_wrt  & \shift_out.i_data [11];
  assign _0737_ = _0756_ & \shift_out.s_shifter [10];
  assign _0736_[11] = _0779_ | _0737_;
  assign _0738_ = \shift_out.i_wrt  & \shift_out.i_data [12];
  assign _0739_ = _0756_ & \shift_out.s_shifter [11];
  assign _0736_[12] = _0738_ | _0739_;
  assign _0740_ = \shift_out.i_wrt  & \shift_out.i_data [13];
  assign _0741_ = _0756_ & \shift_out.s_shifter [12];
  assign _0736_[13] = _0740_ | _0741_;
  assign _0742_ = \shift_out.i_wrt  & \shift_out.i_data [14];
  assign _0743_ = _0756_ & \shift_out.s_shifter [13];
  assign _0736_[14] = _0742_ | _0743_;
  assign _0744_ = \shift_out.i_wrt  & \shift_out.i_data [15];
  assign _0745_ = _0756_ & \shift_out.s_shifter [14];
  assign _0736_[15] = _0744_ | _0745_;
  assign _0746_ = \shift_out.i_wrt  & \shift_out.i_data [16];
  assign _0747_ = _0756_ & \shift_out.s_shifter [15];
  assign _0736_[16] = _0746_ | _0747_;
  assign _0748_ = \shift_out.i_wrt  & \shift_out.i_data [17];
  assign _0749_ = _0756_ & \shift_out.s_shifter [16];
  assign _0736_[17] = _0748_ | _0749_;
  assign _0750_ = \shift_out.i_wrt  & \shift_out.i_data [18];
  assign _0751_ = _0756_ & \shift_out.s_shifter [17];
  assign _0736_[18] = _0750_ | _0751_;
  assign _0752_ = \shift_out.i_wrt  & \shift_out.i_data [19];
  assign _0753_ = _0756_ & \shift_out.s_shifter [18];
  assign _0736_[19] = _0752_ | _0753_;
  assign _0754_ = \shift_out.i_wrt  & \shift_out.i_data [20];
  assign _0755_ = _0756_ & \shift_out.s_shifter [19];
  assign _0736_[20] = _0754_ | _0755_;
  always @(posedge \shift_out.i_clk_p , negedge \shift_out.i_rst_n )
    if (!\shift_out.i_rst_n ) \shift_out.s_shifter [0] <= 1'h0;
    else if (\shift_out.i_en ) \shift_out.s_shifter [0] <= _0736_[0];
  always @(posedge \shift_out.i_clk_p , negedge \shift_out.i_rst_n )
    if (!\shift_out.i_rst_n ) \shift_out.s_shifter [1] <= 1'h0;
    else if (\shift_out.i_en ) \shift_out.s_shifter [1] <= _0736_[1];
  always @(posedge \shift_out.i_clk_p , negedge \shift_out.i_rst_n )
    if (!\shift_out.i_rst_n ) \shift_out.s_shifter [2] <= 1'h0;
    else if (\shift_out.i_en ) \shift_out.s_shifter [2] <= _0736_[2];
  always @(posedge \shift_out.i_clk_p , negedge \shift_out.i_rst_n )
    if (!\shift_out.i_rst_n ) \shift_out.s_shifter [3] <= 1'h0;
    else if (\shift_out.i_en ) \shift_out.s_shifter [3] <= _0736_[3];
  always @(posedge \shift_out.i_clk_p , negedge \shift_out.i_rst_n )
    if (!\shift_out.i_rst_n ) \shift_out.s_shifter [4] <= 1'h0;
    else if (\shift_out.i_en ) \shift_out.s_shifter [4] <= _0736_[4];
  always @(posedge \shift_out.i_clk_p , negedge \shift_out.i_rst_n )
    if (!\shift_out.i_rst_n ) \shift_out.s_shifter [5] <= 1'h0;
    else if (\shift_out.i_en ) \shift_out.s_shifter [5] <= _0736_[5];
  always @(posedge \shift_out.i_clk_p , negedge \shift_out.i_rst_n )
    if (!\shift_out.i_rst_n ) \shift_out.s_shifter [6] <= 1'h0;
    else if (\shift_out.i_en ) \shift_out.s_shifter [6] <= _0736_[6];
  always @(posedge \shift_out.i_clk_p , negedge \shift_out.i_rst_n )
    if (!\shift_out.i_rst_n ) \shift_out.s_shifter [7] <= 1'h0;
    else if (\shift_out.i_en ) \shift_out.s_shifter [7] <= _0736_[7];
  always @(posedge \shift_out.i_clk_p , negedge \shift_out.i_rst_n )
    if (!\shift_out.i_rst_n ) \shift_out.s_shifter [8] <= 1'h0;
    else if (\shift_out.i_en ) \shift_out.s_shifter [8] <= _0736_[8];
  always @(posedge \shift_out.i_clk_p , negedge \shift_out.i_rst_n )
    if (!\shift_out.i_rst_n ) \shift_out.s_shifter [9] <= 1'h0;
    else if (\shift_out.i_en ) \shift_out.s_shifter [9] <= _0736_[9];
  always @(posedge \shift_out.i_clk_p , negedge \shift_out.i_rst_n )
    if (!\shift_out.i_rst_n ) \shift_out.s_shifter [10] <= 1'h0;
    else if (\shift_out.i_en ) \shift_out.s_shifter [10] <= _0736_[10];
  always @(posedge \shift_out.i_clk_p , negedge \shift_out.i_rst_n )
    if (!\shift_out.i_rst_n ) \shift_out.s_shifter [11] <= 1'h0;
    else if (\shift_out.i_en ) \shift_out.s_shifter [11] <= _0736_[11];
  always @(posedge \shift_out.i_clk_p , negedge \shift_out.i_rst_n )
    if (!\shift_out.i_rst_n ) \shift_out.s_shifter [12] <= 1'h0;
    else if (\shift_out.i_en ) \shift_out.s_shifter [12] <= _0736_[12];
  always @(posedge \shift_out.i_clk_p , negedge \shift_out.i_rst_n )
    if (!\shift_out.i_rst_n ) \shift_out.s_shifter [13] <= 1'h0;
    else if (\shift_out.i_en ) \shift_out.s_shifter [13] <= _0736_[13];
  always @(posedge \shift_out.i_clk_p , negedge \shift_out.i_rst_n )
    if (!\shift_out.i_rst_n ) \shift_out.s_shifter [14] <= 1'h0;
    else if (\shift_out.i_en ) \shift_out.s_shifter [14] <= _0736_[14];
  always @(posedge \shift_out.i_clk_p , negedge \shift_out.i_rst_n )
    if (!\shift_out.i_rst_n ) \shift_out.s_shifter [15] <= 1'h0;
    else if (\shift_out.i_en ) \shift_out.s_shifter [15] <= _0736_[15];
  always @(posedge \shift_out.i_clk_p , negedge \shift_out.i_rst_n )
    if (!\shift_out.i_rst_n ) \shift_out.s_shifter [16] <= 1'h0;
    else if (\shift_out.i_en ) \shift_out.s_shifter [16] <= _0736_[16];
  always @(posedge \shift_out.i_clk_p , negedge \shift_out.i_rst_n )
    if (!\shift_out.i_rst_n ) \shift_out.s_shifter [17] <= 1'h0;
    else if (\shift_out.i_en ) \shift_out.s_shifter [17] <= _0736_[17];
  always @(posedge \shift_out.i_clk_p , negedge \shift_out.i_rst_n )
    if (!\shift_out.i_rst_n ) \shift_out.s_shifter [18] <= 1'h0;
    else if (\shift_out.i_en ) \shift_out.s_shifter [18] <= _0736_[18];
  always @(posedge \shift_out.i_clk_p , negedge \shift_out.i_rst_n )
    if (!\shift_out.i_rst_n ) \shift_out.s_shifter [19] <= 1'h0;
    else if (\shift_out.i_en ) \shift_out.s_shifter [19] <= _0736_[19];
  always @(posedge \shift_out.i_clk_p , negedge \shift_out.i_rst_n )
    if (!\shift_out.i_rst_n ) \shift_out.s_shifter [20] <= 1'h0;
    else if (\shift_out.i_en ) \shift_out.s_shifter [20] <= _0736_[20];
  assign { _0780_[13:12], _0780_[9:8], _0780_[6:5], _0780_[2:0] } = 9'h000;
  assign s_en_out = s_en_in;
  assign s_wrt_in = 1'h0;
  assign \shift_out.o_bit  = \shift_out.s_shifter [20];
  assign \shift_out.o_data  = \shift_out.s_shifter ;
  assign \shift_out.i_clk_p  = i_sclk;
  assign \shift_out.i_data  = { s_result, s_flags, 9'h000 };
  assign \shift_out.i_en  = s_en_in;
  assign \shift_out.i_rst_n  = i_rst;
  assign \shift_out.i_wrt  = s_wrt_out;
  assign o_miso = \shift_out.o_bit ;
  assign \shift_in.o_bit  = \shift_in.s_shifter [7];
  assign \shift_in.o_data  = \shift_in.s_shifter ;
  assign \shift_in.i_bit  = i_mosi;
  assign \shift_in.i_clk_p  = i_sclk;
  assign \shift_in.i_en  = s_en_in;
  assign \shift_in.i_rst_n  = i_rst;
  assign \shift_in.i_wrt  = 1'h0;
  assign s_data_next = \shift_in.o_data ;
  assign \exe_unit.o_result [7] = \exe_unit.o_SF ;
  assign \exe_unit.z1.s_zero  = \exe_unit.z1.o_amountOfZeroes ;
  assign \exe_unit.z1.i_data  = { \exe_unit.i_argA , \exe_unit.i_argB  };
  assign \exe_unit.s_z1  = \exe_unit.z1.o_amountOfZeroes ;
  assign { \exe_unit.u2_1.o_res [7], \exe_unit.u2_1.o_res [0] } = { \exe_unit.u2_1.i_data [7], \exe_unit.u2_1.i_data [0] };
  assign \exe_unit.u2_1.i_data  = \exe_unit.i_argA ;
  assign \exe_unit.signModule  = \exe_unit.u2_1.o_res ;
  assign \exe_unit.sign1.o_u2 [0] = \exe_unit.sign1.i_data [0];
  assign \exe_unit.sign1.i_data  = \exe_unit.i_argA ;
  assign \exe_unit.U2  = \exe_unit.sign1.o_u2 ;
  assign \exe_unit.pEncoder.i_data  = \exe_unit.i_argA ;
  assign \exe_unit.encode  = \exe_unit.pEncoder.o_y ;
  assign \exe_unit.onehot.i_onehot  = \exe_unit.i_argA ;
  assign \exe_unit.o_err  = \exe_unit.onehot.o_err ;
  assign \exe_unit.s_onehot  = \exe_unit.onehot.o_nkb ;
  assign \exe_unit.crc4_chck.crc_tmp  = { 8'hxx, \exe_unit.crc4_chck.o_crc  };
  assign \exe_unit.crc4_chck.poly_tmp  = \exe_unit.crc4_chck.i_poly [3:1];
  assign \exe_unit.crc4_chck.i_crc  = \exe_unit.i_argB [6:4];
  assign \exe_unit.crc4_chck.i_data  = \exe_unit.i_argA ;
  assign \exe_unit.crc4_chck.i_poly  = \exe_unit.i_argB [3:0];
  assign \exe_unit.s_crc4_chk  = \exe_unit.crc4_chck.o_crc ;
  assign \exe_unit.crc4.crc_tmp  = { 8'hxx, \exe_unit.crc4.o_crc  };
  assign \exe_unit.crc4.poly_tmp  = \exe_unit.crc4.i_poly [3:1];
  assign \exe_unit.crc4.i_crc  = 3'h0;
  assign \exe_unit.crc4.i_data  = \exe_unit.i_argA ;
  assign \exe_unit.crc4.i_poly  = \exe_unit.i_argB [3:0];
  assign \exe_unit.s_crc4  = \exe_unit.crc4.o_crc ;
  assign \exe_unit.i_argA  = s_argA;
  assign \exe_unit.i_argB  = s_argB;
  assign \exe_unit.i_oper  = s_oper;
  assign s_flags_next[3] = \exe_unit.o_BF ;
  assign s_flags_next[2] = \exe_unit.o_NF ;
  assign s_flags_next[1] = \exe_unit.o_OF ;
  assign s_flags_next[0] = \exe_unit.o_SF ;
  assign s_result_next = \exe_unit.o_result ;
  assign \counter.i_clk_p  = i_sclk;
  assign \counter.i_cycles  = s_cycles;
  assign \counter.i_rst_n  = i_rst;
  assign \counter.i_we  = s_we;
  assign s_inter = \counter.o_inter ;
endmodule
